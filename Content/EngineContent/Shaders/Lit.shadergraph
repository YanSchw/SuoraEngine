Material: 
  ShaderGraph: 5476854376845768
  Uniform_0: 
    m_Float: 0.000000
    m_Label: BaseColor
    m_Texture2D: 0
    m_Type: 5
    m_Vec3: 0.000000/0.000000/0.000000
  Uniform_1: 
    m_Float: 0.000000
    m_Label: Roughness
    m_Texture2D: 0
    m_Type: 1
    m_Vec3: 0.000000/0.000000/0.000000
  Uniform_2: 
    m_Float: 0.000000
    m_Label: Metallic
    m_Texture2D: 0
    m_Type: 1
    m_Vec3: 0.000000/0.000000/0.000000
  m_BackfaceCulling: true
UUID: 5476854376845768
m_BaseShader: DeferredLit.glsl
m_ShaderSource: >-
  \ctype vertex\n\cversion 330 core\n\n\n\nlayout(location = 0) in
  vec3 a_Position;\nlayout(location = 1) in vec4 a_Color;\nlayout(location
  = 2) in vec2 a_TexCoord;\nlayout(location = 3) in vec3 a_Normal;\nlayout(location
  = 4) in vec3 a_Tangent;\nlayout(location = 5) in vec3 a_Bitangent;\nlayout(location
  = 6) in int a_ClusterID;\nout vec2 UV;\nout vec4 frag_Color;\nout
  vec3 worldPos;\nout vec3 worldNormal;\nout mat3 TBN;\nflat out int
  v_Cluster;\n\nuniform mat4 u_Transform;\nuniform mat4 u_ViewProjection;\nuniform
  mat4 u_NormalMatrix;\n\n\nuniform sampler2D BaseColor;\nuniform float
  Roughness;\nuniform float Metallic;\n\n\nvoid main(void)\n{\n   
  vec3 worldPositionOffset =  vec3(0.0);\n\tgl_Position = u_ViewProjection
  * u_Transform * vec4(a_Position + worldPositionOffset, 1.0);\n\t\n\tfrag_Color
  = a_Color;\n\tUV = a_TexCoord;\n\tworldPos = vec3(u_Transform * vec4(a_Position
  + worldPositionOffset, 1.0));\n\t\n\tworldNormal = vec3(u_Transform
  * vec4(a_Normal, 0.0));\n\t\n\n\tvec3 T = normalize(vec3(u_Transform
  * vec4(normalize(a_Tangent), 0.0)));\n\tvec3 B = normalize(vec3(u_Transform
  * vec4(normalize(a_Bitangent), 0.0)));\n\tvec3 N = normalize(vec3(u_Transform
  * vec4(normalize(a_Normal), 0.0)));\n\tTBN = mat3(T, B, N);\n\n\tv_Cluster
  = a_ClusterID;\n}\n\n\ctype fragment\n\cversion 330 core\n\nin vec4
  frag_Color;\nin vec2 UV;\nin vec3 worldPos;\nin vec3 worldNormal;\nin
  mat3 TBN;\nflat in int v_Cluster;\n\nlayout(location = 0) out vec3
  out_BaseColor;\nlayout(location = 1) out float out_Metallic;\nlayout(location
  = 2) out float out_Roughness;\nlayout(location = 3) out vec3 out_WorldPos;\nlayout(location
  = 4) out vec3 out_WorldNormal;\nlayout(location = 5) out vec3 out_Emissive;\nlayout(location
  = 6) out int out_MeshID;\nlayout(location = 7) out int out_Cluster;\n\nuniform
  int u_MeshID;\n\n\nuniform sampler2D BaseColor;\nuniform float Roughness;\nuniform
  float Metallic;\n\n\n\n\nmat3 cotangent_frame( vec3 N, vec3 p, vec2
  uv )\n{\n    \n    vec3 dp1 = dFdx( p );\n    vec3 dp2 = dFdy( p
  );\n    vec2 duv1 = dFdx( uv );\n    vec2 duv2 = dFdy( uv );\n\n
     \n    vec3 dp2perp = cross( dp2, N );\n    vec3 dp1perp = cross(
  N, dp1 );\n    vec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n  
   vec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n\n    \n    float
  invmax = inversesqrt( max( dot(T,T), dot(B,B) ) );\n    return mat3(
  T * invmax, B * invmax, N );\n}\n\nvec3 SampleNormal(vec3 n, float
  flip)\n{\n\tn = normalize(n * 2.0 - vec3(1.0)); \n\tn = normalize(TBN
  * n); \n\tif (flip == 1.0) n.g = 1.0 - n.g;\n\treturn n;\n}\n\nvoid
  main(void)\n{\n\tvec3 baseColor = (texture((BaseColor), UV).xyz);\n\tfloat
  opacity =  1.0;\n\t\n\tif (opacity <= 0.05) \n\t{\n\t\tdiscard;\n\t\treturn;\n\t}\n\n\t\n\tmat4
  threshold = mat4\n    (\n\t\t1.0 / 17.0,   9.0 / 17.0,   3.0 / 17.0,
    11.0 / 17.0,\n\t\t13.0 / 17.0,  5.0 / 17.0,   15.0 / 17.0,  7.0
  / 17.0,\n\t\t4.0 / 17.0,   12.0 / 17.0,  2.0 / 17.0,   10.0 / 17.0,\n\t\t16.0
  / 17.0,  8.0 / 17.0,   14.0 / 17.0,  6.0 / 17.0\n    );\n    int
  x = int(gl_FragCoord.x - 0.5);\n    int y = int(gl_FragCoord.y -
  0.5);\n    if (opacity < threshold[x % 4][y % 4])\n\t{\n\t\tdiscard;\n\t\treturn;\n\t}\n\n\tfloat
  metallic = (Metallic);\n\tfloat roughness = (Roughness);\n\n\tvec3
  emissive =  vec3(0.0);\n\n\tvec3 normal =  vec3(0.0);\n\t\n\tout_BaseColor
  = baseColor;\n\tout_Metallic = metallic;\n\tout_Roughness = roughness;\n\tout_WorldPos
  = worldPos;\n\tout_WorldNormal = normalize(worldNormal * 2.0 + normal);\n\tout_Emissive
  = emissive;\n\tout_MeshID = u_MeshID;\n\tout_Cluster = v_Cluster;\n}
m_SourceFileTime: "-5121395749840025316"
